<?xml version="1.0"?>
<project name="TC Direct System Build" default="dist" basedir=".">
    <property file="${basedir}/build.version"/>
    <property file="topcoder_global.properties"/>
    
    <property name="prod_configdir" value="../prod_conf"/>

    <!-- Override these in ../topcoder_global.properties -->
    <property name="javadoc.locale" value="en_US"/>
    <property name="javac.encoding" value="UTF-8"/>
    <property name="libdir" value="../tcs/lib"/>
    <property name="tcs_libdir" value="${libdir}/tcs"/>
    <property name="ext_libdir" value="${libdir}/third_party"/>
    <property name="ext_flex_libdir" value="${libdir}/third_party/flex"/>
    <property name="debug" value="off"/>
    <property name="verbose" value="no"/>
    <property name="cockpit-war" value="cockpit-war"/>
    <available file="topcoder_global.properties" property="properties.exists"/>

    <!-- DIRECTORY SETUP -->
    <property name="srcdir" value="src"/>
    <property name="docsdir" value="docs"/>
    <property name="configdir" value="conf"/>
    <property name="testlogdir" value="log"/>
    <property name="test_reflib" value="test_reflib"/>
    <property name="testfiles" value="test_files"/>
    <property name="javadocsdir" value="${docsdir}/javadocs"/>
    <property name="webdir" value="${srcdir}/web"/>
    <property name="reports" value="${testlogdir}/reports"/>

    <!-- Import the dependencies of this build file -->
    <import file="${basedir}/build-dependencies.xml"/>

    <!--Import the build-master.xml -->
    <property name="subprojects.conf" value="${basedir}/subprojects.xml"/>
<!--
    <import file="${basedir}/build-master.xml"/>
-->

    <!-- COMPONENT PARAMETERS -->
    <property name="component" value="${component.name}"/>
    <property name="package" value="${component.package}"/>
    <property name="packagedir" value="${component.packagedir}"/>
    <property name="distfilename" value="${component.distfilename}"/>
    <property name="component_version"
              value="${component.version.major}.${component.version.minor}.${component.version.micro}"/>
    <property name="component_path" value="${distfilename}/${component_version}"/>

    <!-- Change this for custom component build -->
    <!--
    <property name="greekgod_libdir" value="../lib/greekgod"/>
    <property name="target_libdir" value="${greekgod_libdir}"/>
    -->
    <property name="target_libdir" value="${tcs_libdir}"/>


    <!-- DIRECTORY STRUCTURE -->
    <property name="javasrc" value="${srcdir}/java"/>
    <property name="javamain" value="${javasrc}/main"/>
    <property name="javatests" value="${javasrc}/tests"/>

    <property name="builddir" value="build"/>
    <property name="build_classdir" value="${builddir}/classes"/>
    <property name="build_testclassdir" value="${builddir}/testClasses"/>
    <property name="build_targetclassdir" value="${builddir}/targetclasses"/>
    <property name="build_distdir" value="${builddir}/dist"/>
    <property name="build_docsdir" value="${builddir}/${docsdir}"/>
    <property name="build_javadocsdir" value="${builddir}/${javadocsdir}"/>
    <property name="build_tcsdistdir" value="${build_distdir}/${distfilename}-${component_version}"/>
    <property name="manifest_file_path" value="${build_tcsdistdir}/META-INF/"/>
    <property name="manifest_file" value="${manifest_file_path}/MANIFEST.MF"/>

    <!-- COMPONENT DISTRIBUTION STRUCTURE -->
    <property name="dist_lib" value="${build_distdir}/lib/tcs"/>


    <property name="dist_docs" value="${build_tcsdistdir}/${docsdir}"/>
    <property name="dist_javadocs" value="${build_tcsdistdir}/${javadocsdir}"/>
    <property name="dist_coverage" value="${dist_docs}/coverage"/>

    <!-- NAME FOR .JAR FILES -->
    <property name="component.ear" value="${build_distdir}/${distfilename}.ear"/>
    <property name="component.war" value="${build_distdir}/${distfilename}.war"/>
    <property name="component.jar" value="${dist_lib}/${component_path}/${distfilename}.jar"/>
    <property name="javadoc.jar" value="javadocs.jar"/>
    <property name="component.tests.jar" value="${dist_lib}/${distfilename}_tests.jar"/>
    <property name="component.dist.jar" value="${build_distdir}/${distfilename}-${component_version}.jar"/>
    <property name="dev_submission.jar" value="${distfilename}_${component_version}_dev_submission.jar"/>
    <property name="design_submission.jar" value="${distfilename}_${component_version}_design_submission.jar"/>
    <property name="dev_dist.jar" value="${distfilename}_${component_version}_dev_dist.jar"/>
    <property name="design_dist.jar" value="${distfilename}_${component_version}_design_dist.jar"/>

    <!-- DOCUMENT PACKAGE -->
    <property name="dist_docpackage" value="${builddir}/doc_package"/>
    <property name="docpackage.jar" value="${distfilename}_docs.jar"/>

    <property name="dist_envsetupdir" value="${build_distdir}/envsetup"/>

    <!-- classes needed to compile the production code -->
    <path id="buildlibs">
        <path refid="component.tcs-dependencies"/>
        <path refid="component.3rdParty-dependencies"/>
    </path>
    
    <!-- Initializes the environment necessary for building and deploying the TC Direct application -->
    <target name="init">
        <mkdir dir="${builddir}"/>
        <mkdir dir="${build_classdir}"/>
        <mkdir dir="${build_distdir}"/>
        <mkdir dir="${build_distdir}/lib"/>
        <mkdir dir="${builddir}/replace"/>
        <mkdir dir="${builddir}/tmp"/>
        <copy todir="${builddir}/replace" overwrite="true">
            <fileset dir="${configdir}">
                <include name="**/*"/>
            </fileset>
        </copy>
        <replace replacefilterfile="build.properties" dir="${builddir}/replace"/>
        <!-- Copy the libraries -->
        <copy todir="${build_distdir}/lib" flatten="true">
            <fileset dir="${tcs_libdir}" includes="**/*.jar" excludes="**/dist/**/*.jar"/>
        </copy>
        <!-- Copy the libraries -->
        <copy todir="${build_distdir}/lib" flatten="true">
            <fileset dir="${libdir}/third_party" includes="**/*.jar">
                <exclude name="**/svn*.jar"/>
                <exclude name="jstl/**/*.jar"/>
                <exclude name="servlet-api/**/*.jar"/>
                <exclude name="ejb-api/**/*.jar"/>
                <exclude name="jboss/**/*.jar"/>
                <exclude name="j2ee/**/*.jar"/>
            </fileset>
        </copy>
    </target>

    <target name="compile">
        <mkdir dir="${build_classdir}"/>
        <javac srcdir="${javamain}" destdir="${build_classdir}" includes="${packagedir}/**" debug="true"
               verbose="${verbose}" includeAntRuntime="no" encoding="${javac.encoding}">
            <classpath refid="buildlibs"/>
        </javac>
    </target>

    <target name="manifest">
        <mkdir dir="${manifest_file_path}"/>
        <manifest file="${manifest_file}">
            <attribute name="Component-Vendor" value="TopCoder Inc."/>
            <attribute name="Component-Name" value="${component}"/>
            <attribute name="Component-Version" value="${component_version}.${component.version.build}"/>
        </manifest>
    </target>

    <property name="temp_dist_ear" value="${build_distdir}/temp_dist_ear"/>

    <target name="ear" depends="war">
        <!-- Copy the libraries -->
        <mkdir dir="${build_distdir}"/>
        <ear basedir="${build_distdir}" destfile="${component.ear}" appxml="${configdir}/ear/META-INF/application.xml"
             includes="**/*.jar">
            <metainf file="${configdir}/ear/META-INF/jboss-app.xml"/>
            <include name="**/*.war/**"/>
        </ear>
    </target>


    <target name="package-static" >

        <zip destfile="direct-static.jar">
            <fileset dir="${srcdir}/web">
                <include name="css/*.css"/>
                <exclude name="scripts/tiny_mce/**/*.*"/>
                <include name="scripts/*.*"/>
                <include name="scripts/launch/**/*.*"/>
                
            </fileset>
        </zip>
    </target>


    <target name="dist" depends="ear">
    </target>

    <target name="clean">
        <delete dir="${builddir}"/>
        <delete dir="${testlogdir}"/>
    </target>

    <target name="clean-jboss">
        <delete dir="${jboss.home}/server/${server.name}/tmp"/>
        <delete dir="${jboss.home}/server/${server.name}/work"/>
        <delete dir="${jboss.home}/server/${server.name}/deploy/tcdirect.ear"/>
        <delete file="${jboss.home}/server/${server.name}/deploy/tcdirect.ear"/>
    </target>

    <!-- ************************************************************************** -->
    <!-- ************ DEPLOYMENT RELATED TARGETS  ******************************* -->
    <!-- ************************************************************************** -->
    <target name="deploy-prod" depends="deploy-internal">
    </target>

    <target name="deploy" depends="dist, deploy-internal" description="deploy the ear to jboss">
    </target>
    
    <target name="deploy-internal">
        <delete file="${jboss.home}/server/${server.name}/deploy/${distfilename}.ear"/>
        <delete dir="${jboss.home}/server/${server.name}/deploy/${distfilename}.ear"/>

        <unzip src="${component.ear}" dest="${jboss.home}/server/${server.name}/deploy/${distfilename}.ear"/>
<!--
        <copy file="${component.ear}" todir="${jboss.home}/server/${server.name}/deploy"/>
-->

        <copy file="${configdir}/direct-ds.xml" todir="${jboss.home}/server/${server.name}/deploy"/>
        <copy file="${configdir}/ApplicationServer.properties" todir="${jboss.home}/server/${server.name}/conf"/>
        <copy file="${configdir}/DBMS.properties" todir="${jboss.home}/server/${server.name}/conf"/>
        <copy file="${configdir}/DataAccess.properties" todir="${jboss.home}/server/${server.name}/conf"/>
        <copy file="${configdir}/cache.properties" todir="${jboss.home}/server/${server.name}/conf"/>
        <copy file="${configdir}/Direct.properties" todir="${jboss.home}/server/${server.name}/conf"/>
        <copy file="${configdir}/app.properties" todir="${jboss.home}/server/${server.name}/conf"/>
        <copy file="${configdir}/contestFees.xml" todir="${jboss.home}/server/${server.name}/conf"/>
        <copy file="${configdir}/copilotFees.xml" todir="${jboss.home}/server/${server.name}/conf"/>
        <copy file="${configdir}/contestTypes.xml" todir="${jboss.home}/server/${server.name}/conf"/>
        <copy file="${configdir}/fileTypes.xml" todir="${jboss.home}/server/${server.name}/conf"/>
        <copy file="${configdir}/overview.xml" todir="${jboss.home}/server/${server.name}/conf"/>          
        <copy file="${configdir}/components/com/topcoder/security/Util.properties" todir="${jboss.home}/server/${server.name}/conf"/>
        <copy file="${shared.jar}" todir="${jboss.home}/server/${server.name}/lib"/>
        <copy file="${tcwebcommon.jar}" todir="${jboss.home}/server/${server.name}/lib"/>
        <!-- Added in Direct Search Assebmly -->
        <!--<copy file="${cockpitclient.jar}" todir="${jboss.home}/server/${server.name}/lib"/>     -->   
        <!--<copy file="${tcs_libdir}/user_service.jar" todir="${jboss.home}/server/${server.name}/lib"/>-->
        <!--<copy file="${aws-java}" todir="${jboss.home}/server/${server.name}/lib"/>-->
        <copy file="${ext_libdir}/aws-java-sdk/aws-java-sdk-1.0.004.jar" todir="${jboss.home}/server/${server.name}/lib"/>
        <copy file="${ext_libdir}/informix/ifxjdbc.jar" todir="${jboss.home}/server/${server.name}/lib"/>
        <copy file="${ext_libdir}/jboss-cache/jboss-cache-jdk50.jar" todir="${jboss.home}/server/${server.name}/lib"/>
        <copy file="${ext_libdir}/jboss-cache/jgroups.jar" todir="${jboss.home}/server/${server.name}/lib"/>
    </target>

    <target name="env_setup" description="Build the environment setup conf zip">
        <mkdir dir="${dist_envsetupdir}"/>

        <zip destfile="${dist_envsetupdir}/server.conf.jar" filesonly="true">
            <fileset dir="${configdir}/JBoss">
                <include name="*"/>
            </fileset>
        </zip>
    </target>

    <target name="copy_properties" if="properties.exists"
            description="Copy the topcoder_global.properties from root folder to the parent project folder">
        <copy file="topcoder_global.properties" todir="${basedir}"/>
    </target>

    <target name="deploy-security">
        <copy todir="${jboss.home}/server/${server.name}/conf" overwrite="true">
            <fileset dir="${configdir}" includes="com/topcoder/security/Util.properties"/>
<!--
            <fileset dir="${configdir}" includes="security.keystore"/>
-->
        </copy>
        <copy todir="${jboss.home}/server/${server.name}/deploy" overwrite="true">
            <fileset dir="${tcs_libdir}" includes="security.ear"/>
        </copy>
    </target>

    <target name="update_port">
        <replace dir="${base}" value="http://127.0.0.1:8080">
            <include name="**/web.xml"/>
            <include name="**/*.mxml"/>
            <replacetoken>http://127.0.0.1:8003</replacetoken>
        </replace>
    </target>
    
    <target name="package-direct">
        <copy todir="${configdir}" overwrite="true">
            <fileset dir="${prod_configdir}">
                <include name="**/*.*"/>
            </fileset>
        </copy>
	<antcall target="ear"/>
        <jar destfile="direct.jar" basedir=".">
            <include name="**/*.*"/>
            <include name="src/web/css/**/*.*"/>
            <include name="src/web/scripts/**/*.*"/>
            <include name="src/web/images/**/*.*"/>
            <exclude name="**/.svn/**/*.*"/>
            <exclude name="${srcdir}/**/*.*"/>
            <exclude name="${docdir}/**/*.*"/>
            <exclude name="${testlogdir}/**/*.*"/>
            <exclude name="${testfiles}/**/*.*"/>
            <exclude name="topcoder_global.properties"/>
        </jar>
    </target>

    <!-- Builds the WAR file for web application module -->
    <target name="war" depends="clean, init, compile">
        <war warfile="temp.war" webxml="${builddir}/replace/web/WEB-INF/web.xml">
            <webinf dir="${builddir}/replace/web/WEB-INF" includes="applicationContext.xml"/>
            <webinf dir="${builddir}/replace/web/WEB-INF" includes="actions.xml"/>
            <webinf dir="${configdir}/web/WEB-INF" includes="tld/*.tld"/>
            <webinf dir="${webdir}/WEB-INF" includes="tags/**/*.tag"/>
            <classes dir="${builddir}/replace/web/WEB-INF" includes="struts.xml"/>
            <classes dir="${build_classdir}" includes="**/*.class"/>
            <classes dir="${builddir}/replace" includes="META-INF/**/*"/>
            <classes dir="${builddir}/replace/web" includes="Messages.properties"/>
            <classes dir="${builddir}/replace/components" includes="**/*"/>
            <classes dir="${configdir}" includes="xwork-conversion.properties"/>
            <fileset dir="${webdir}">
                <include name="**/*.jsp"/>
            </fileset>
            <lib dir="${ext_libdir}/jstl" includes="*.jar"/>
           <!-- <fileset dir="${webdir}">
                <include name="css/**/*"/>
                <include name="images/**/*"/>
                <include name="scripts/**/*"/>
            </fileset>-->
        </war>
        
        <unzip src="temp.war" dest="${component.war}"/>
        <delete file="temp.war"/>
    </target>

    <!-- ************************************************************************** -->
    <!-- ************ END DEPLOYMENT RELATED TARGETS  *************************** -->
    <!-- ************************************************************************** -->

    <!-- Import the macro definitions used to override standard behaviour of
    some of the targets of this build file. -->
    <import file="${basedir}/build-override.xml" optional="true"/>

</project>
