<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
  
  <context:property-placeholder location="classpath:jdbc.properties"/>

  <context:annotation-config/>

  <context:component-scan base-package="com.topcoder.direct.services.project.task.impl" />
  
  <bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${datasource.driver}" />
		<property name="url" value="${datasource.url}" />
		<property name="username" value="${datasource.username}" />
		<property name="password" value="${datasource.password}" />
		<property name="initialSize" value="0" />
		<property name="maxActive" value="20" />
		<property name="minIdle" value="0" />
		<property name="poolPreparedStatements" value="false" />
	</bean>
	
   <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="test_unit" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="true" />
				<property name="showSql" value="true" />
				<property name="databasePlatform" value="${hibernate.dialect}" />
			</bean>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
	    <property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>
	
  <tx:annotation-driven transaction-manager="transactionManager" />

  <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
  <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
  
  <bean id="logFactoryBean" class="com.topcoder.util.log.log4j.Log4jLogFactory" />

  <bean id="logBean" factory-bean="logFactoryBean" factory-method="createLog">
	  <constructor-arg>
	  	<value>test_log</value>
	  </constructor-arg>
  </bean>

 <bean id="notificationService" class="com.topcoder.direct.services.project.task.impl.EmailEngineNotificationService">
 	<property name="log" ref="logBean" />
    <property name="userService" ref="mockUserService"/>
    <property name="emailSender" value="donotreply@topcoder.com"/>
    <property name="taskCreationEmailSubjectTemplateText" value="Task &quot;%TASK_NAME%&quot; has been creation."/>
    <property name="taskCreationEmailBodyTemplatePath" value="test_files/create_body_template.txt"/>
    <property name="taskStatusChangeEmailSubjectTemplateText" value="Task &quot;%TASK_NAME%&quot; status has been changed."/>
    <property name="taskStatusChangeEmailBodyTemplatePath" value="test_files/status_body_template.txt"/>
  </bean>
  
  <bean id="taskListService" class="com.topcoder.direct.services.project.task.impl.JPATaskListService">
  	<property name="log" ref="logBean" />
  	<property name="userService" ref="mockUserService" />
  	<property name="notificationService" ref="notificationService"/>
  </bean>
  
   <bean id="taskService" class="com.topcoder.direct.services.project.task.impl.JPATaskService">
  	<property name="log" ref="logBean" />
  	<property name="userService" ref="mockUserService" />
  	<property name="notificationService" ref="notificationService"/>
  	<property name="taskListService" ref="taskListService" />
  	<property name="attachmentDirectory" value="test_files/attachments/" />
  </bean>
  
  <!-- mockup class for unit tests only -->
  <bean id="mockUserService" class="com.topcoder.service.user.MockUserService">
  </bean>
    <!-- mockup class for unit tests only -->
  <bean id="stressuserservice" class="com.topcoder.direct.services.project.task.stresstests.UserServiceStressMock">
  </bean>
  <!-- mockup class for unit tests only -->
  <bean id="mockTestService" class="com.topcoder.direct.services.project.task.impl.MockJPATestService">
  	<property name="userService" ref="mockUserService"/>
  	<property name="notificationService" ref="notificationService"/>
  </bean>
  
<!--  <bean id="mockJPAService" class="com.topcoder.direct.services.project.task.impl.MockJPAService">
    <property name="userService" value="userService"/>
    <property name="notificationService" ref="notificationService"/>
    <property name="entityManager" ref="entityManager"/>
  </bean>
  
   <bean id="userService" class="com.topcoder.direct.services.project.task.impl.MockJPAService">
    <property name="userService" value="userService"/>
    <property name="notificationService" ref="notificationService"/>
    <property name="entityManager" ref="entityManager"/>
  </bean>
  
 <bean id="notificationService" class="com.topcoder.direct.services.project.task.impl.notification.EmailEngineNotificationService">
    <property name="userService" ref="userService"/>
    <property name="emailSender" value="sedner@topcoder.com"/>
    <property name="taskCreationEmailSubjectTemplateText" value="CS 1.3.3"/>
    <property name="taskCreationEmailBodyTemplateText" value="CS 1.3.3"/>
    <property name="taskStatusChangeEmailSubjectTemplateText" value="CS 1.3.3"/>
    <property name="taskStatusChangeEmailBodyTemplateText" value="CS 1.3.3"/>
  </bean> -->

</beans>
