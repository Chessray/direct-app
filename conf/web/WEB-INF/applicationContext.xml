<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:sec="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
  http://www.springframework.org/schema/aop
  http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
  http://www.springframework.org/schema/context
  http://www.springframework.org/schema/context/spring-context-2.5.xsd
  http://www.springframework.org/schema/tx
  http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
  http://www.springframework.org/schema/security
  http://www.springframework.org/schema/security/spring-security-2.0.xsd">

    <context:property-placeholder location="classpath:app.properties"/>

    <!-- Services -->
    <bean id="projectServiceFacade" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="remote/ProjectServiceFacadeBean"/>
        <property name="cache" value="true"/>
        <property name="lookupOnStartup" value="false"/>
        <property name="jndiEnvironment">
            <props>
                <prop key="java.naming.factory.initial">org.jnp.interfaces.NamingContextFactory
                </prop>
                <prop key="java.naming.provider.url">${service.provder.url}</prop>
                <prop key="java.naming.factory.url.pkgs">org.jboss.naming:org.jnp.interfaces
                </prop>
            </props>
        </property>
        <property name="proxyInterface" value="com.topcoder.service.facade.project.ProjectServiceFacade"/>
    </bean>

    <bean id="contestServiceFacade" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="ContestServiceFacadeBean/remote"/>
        <property name="cache" value="true"/>
        <property name="lookupOnStartup" value="false"/>
        <property name="jndiEnvironment">
            <props>
                <prop key="java.naming.factory.initial">org.jnp.interfaces.NamingContextFactory
                </prop>
                <prop key="java.naming.provider.url">${service.provder.url}</prop>
                <prop key="java.naming.factory.url.pkgs">org.jboss.naming:org.jnp.interfaces
                </prop>
            </props>
        </property>
        <property name="proxyInterface" value="com.topcoder.service.facade.contest.ContestServiceFacade"/>
    </bean>

    <bean id="pipelineServiceFacade" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="remote/PipelineServiceFacadeBean"/>
        <property name="cache" value="true"/>
        <property name="lookupOnStartup" value="false"/>
        <property name="jndiEnvironment">
            <props>
                <prop key="java.naming.factory.initial">org.jnp.interfaces.NamingContextFactory
                </prop>
                <prop key="java.naming.provider.url">${service.provder.url}</prop>
                <prop key="java.naming.factory.url.pkgs">org.jboss.naming:org.jnp.interfaces
                </prop>
            </props>
        </property>
        <property name="proxyInterface" value="com.topcoder.service.pipeline.PipelineServiceFacade"/>
    </bean>

    <bean id="contestManager" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="ContestManagerBean"/>
        <property name="cache" value="true"/>
        <property name="lookupOnStartup" value="false"/>
        <property name="jndiEnvironment">
            <props>
                <prop key="java.naming.factory.initial">org.jnp.interfaces.NamingContextFactory
                </prop>
                <prop key="java.naming.provider.url">${service.provder.url}</prop>
                <prop key="java.naming.factory.url.pkgs">org.jboss.naming:org.jnp.interfaces
                </prop>
            </props>
        </property>
        <property name="proxyInterface" value="com.topcoder.service.studio.contest.ContestManager"/>
    </bean>

    <bean id="adminServiceFacade" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="remote/AdminServiceFacadeBean"/>
        <property name="cache" value="true"/>
        <property name="lookupOnStartup" value="false"/>
        <property name="jndiEnvironment">
            <props>
                <prop key="java.naming.factory.initial">org.jnp.interfaces.NamingContextFactory
                </prop>
                <prop key="java.naming.provider.url">${service.provder.url}</prop>
                <prop key="java.naming.factory.url.pkgs">org.jboss.naming:org.jnp.interfaces
                </prop>
            </props>
        </property>
        <property name="proxyInterface" value="com.topcoder.service.facade.admin.AdminServiceFacade"/>
    </bean>

    <bean id="cloudVMService" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="CloudVMServiceBean/remote"/>
        <property name="cache" value="true"/>
        <property name="lookupOnStartup" value="false"/>
        <property name="jndiEnvironment">
            <props>
                <prop key="java.naming.factory.initial">org.jnp.interfaces.NamingContextFactory
                </prop>
                <prop key="java.naming.provider.url">${service.provder.url}</prop>
                <prop key="java.naming.factory.url.pkgs">org.jboss.naming:org.jnp.interfaces
                </prop>
            </props>
        </property>
        <property name="proxyInterface" value="com.topcoder.direct.cloudvm.service.CloudVMService"/>
    </bean>

    <bean id="userService" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="UserServiceBean/remote"/>
        <property name="cache" value="true"/>
        <property name="lookupOnStartup" value="false"/>
        <property name="jndiEnvironment">
            <props>
                <prop key="java.naming.factory.initial">org.jnp.interfaces.NamingContextFactory
                </prop>
                <prop key="java.naming.provider.url">${service.provder.url}</prop>
                <prop key="java.naming.factory.url.pkgs">org.jboss.naming:org.jnp.interfaces
                </prop>
            </props>
        </property>
        <property name="proxyInterface" value="com.topcoder.service.user.UserService"/>
    </bean>

    <bean id="gamePlanService" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="GamePlanServiceBean/remote"/>
        <property name="cache" value="true"/>
        <property name="lookupOnStartup" value="false"/>
        <property name="jndiEnvironment">
            <props>
                <prop key="java.naming.factory.initial">org.jnp.interfaces.NamingContextFactory
                </prop>
                <prop key="java.naming.provider.url">${service.provder.url}</prop>
                <prop key="java.naming.factory.url.pkgs">org.jboss.naming:org.jnp.interfaces
                </prop>
            </props>
        </property>
        <property name="proxyInterface" value="com.topcoder.service.gameplan.GamePlanService"/>
    </bean>

    <!-- AuthenticationInterceptor -->
    <bean id="authenticationInterceptor"
          class="com.topcoder.direct.services.view.interceptors.AuthenticationInterceptor">
        <property name="loginPageName" value="anonymous"/>
        <property name="userSessionIdentityKey" value="user"/>
    </bean>

    <!-- LoggingInterceptor -->
    <bean id="loggingInterceptor" class="com.topcoder.direct.services.view.interceptors.LoggingInterceptor">
        <constructor-arg index="0">
            <value>directLogger</value>
        </constructor-arg>
    </bean>

    <bean id="referenceDataBean" class="com.topcoder.direct.services.configs.ReferenceDataBean">
        <property name="contestServiceFacade" ref="contestServiceFacade"/>
    </bean>

    <bean id="mimeTypeRetriever" class="com.topcoder.direct.services.view.action.contest.launch.MimeTypeRetriever"/>

    <!-- Actions -->
    <bean id="baseDirectStrutsAction"
          class="com.topcoder.direct.services.view.action.contest.launch.BaseDirectStrutsAction"
          abstract="true">
        <property name="projectServiceFacade" ref="projectServiceFacade"/>
        <property name="contestServiceFacade" ref="contestServiceFacade"/>
        <property name="pipelineServiceFacade" ref="pipelineServiceFacade"/>
        <property name="contestManager" ref="contestManager"/>
        <property name="adminServiceFacade" ref="adminServiceFacade"/>
        <property name="referenceDataBean" ref="referenceDataBean"/>
        <property name="userService" ref="userService"/>
    </bean>

    <bean id="commonAction" class="com.topcoder.direct.services.view.action.contest.launch.CommonAction"
          parent="baseDirectStrutsAction">
    </bean>

    <bean id="projectAction" class="com.topcoder.direct.services.view.action.contest.launch.ProjectAction"
          parent="baseDirectStrutsAction"
          abstract="true">
    </bean>

    <bean id="contestAction" class="com.topcoder.direct.services.view.action.contest.launch.ContestAction"
          parent="baseDirectStrutsAction"
          abstract="true">
    </bean>

    <bean id="launchContestAction" class="com.topcoder.direct.services.view.action.contest.launch.LaunchContestAction"
          parent="baseDirectStrutsAction" scope="prototype">
    </bean>

    <bean id="createProjectAction" class="com.topcoder.direct.services.view.action.contest.launch.CreateProjectAction"
          parent="projectAction" scope="prototype">
    </bean>

    <bean id="saveDraftContestAction"
          class="com.topcoder.direct.services.view.action.contest.launch.SaveDraftContestAction"
          parent="contestAction" scope="prototype">
    </bean>

    <bean id="documentUploadAction" class="com.topcoder.direct.services.view.action.contest.launch.DocumentUploadAction"
          parent="contestAction" scope="prototype">
        <property name="mimeTypeRetriever" ref="mimeTypeRetriever"/>
    </bean>

    <bean id="removeDocumentAction" class="com.topcoder.direct.services.view.action.contest.launch.RemoveDocumentAction"
          parent="contestAction" scope="prototype">
    </bean>

    <bean id="downloadDocumentAction"
          class="com.topcoder.direct.services.view.action.contest.launch.DownloadDocumentAction"
          parent="contestAction" scope="prototype">
    </bean>

    <bean id="getCapacityFullDatesAction"
          class="com.topcoder.direct.services.view.action.contest.launch.GetCapacityFullDatesAction"
          parent="baseDirectStrutsAction" scope="prototype">
    </bean>

    <bean id="repostAction" class="com.topcoder.direct.services.view.action.contest.RepostAction"
          parent="baseDirectStrutsAction" scope="prototype">
    </bean>

    <bean id="newVersionAction" class="com.topcoder.direct.services.view.action.contest.NewVersionAction"
          parent="baseDirectStrutsAction" scope="prototype">
    </bean>

    <bean id="dashboardNotificationsAction"
          class="com.topcoder.direct.services.view.action.notification.DashboardNotificationsAction"
          parent="baseDirectStrutsAction" scope="prototype">
    </bean>

    <bean id="updateNotificationsAction"
          class="com.topcoder.direct.services.view.action.notification.UpdateNotificationsAction"
          parent="baseDirectStrutsAction" scope="prototype">
    </bean>
    <bean id="getContestAction" class="com.topcoder.direct.services.view.action.contest.launch.GetContestAction"
          parent="contestAction" scope="prototype">
    </bean>

    <bean id="abstractVMAction" class="com.topcoder.direct.services.view.action.cloudvm.AbstractVMAction"
          parent="baseDirectStrutsAction" scope="prototype" abstract="true">
        <property name="cloudVMService" ref="cloudVMService"/>
    </bean>

    <bean id="launchVMInstanceAction" class="com.topcoder.direct.services.view.action.cloudvm.LaunchVMInstanceAction"
          parent="abstractVMAction" scope="prototype">
        <property name="contestServiceFacade" ref="contestServiceFacade"/>
        <property name="userService" ref="userService"/>
        <property name="softwareContestTypeId" value="1"/>
        <property name="studioContestTypeId" value="2"/>
        <property name="bugRaceContestTypeId" value="3"/>
        <property name="userSecurityKeyCheckUrl"
                  value="http://66.37.210.86/tc?module=BasicRSS&amp;c=rss_get_key&amp;dsid=30&amp;hn={handle}"/>
    </bean>

    <bean id="terminateVMInstanceAction"
          class="com.topcoder.direct.services.view.action.cloudvm.TerminateVMInstanceAction"
          parent="abstractVMAction" scope="prototype">
    </bean>

    <bean id="showVMInstancesAction" class="com.topcoder.direct.services.view.action.cloudvm.ShowVMInstancesAction"
          parent="abstractVMAction" scope="prototype">
    </bean>

    <bean id="dashboardVMAction" class="com.topcoder.direct.services.view.action.cloudvm.DashboardVMAction"
          scope="prototype">
        <property name="cloudVMService" ref="cloudVMService"/>
    </bean>

    <bean id="projectGamePlanAction"
          class="com.topcoder.direct.services.view.action.project.CurrentProjectGamePlanAction"
          scope="prototype">
        <property name="gamePlanService" ref="gamePlanService"/>
    </bean>

    <bean id="contestSubmissionsAction"
          class="com.topcoder.direct.services.view.action.contest.ContestSubmissionsAction"
          scope="prototype" parent="baseDirectStrutsAction">
    </bean>

    <bean id="studioSubmissionAction"
          class="com.topcoder.direct.services.view.action.contest.StudioSubmissionAction"
          scope="prototype" parent="baseDirectStrutsAction">
    </bean>

    <bean id="updateStudioSubmissionFeedbackAction"
          class="com.topcoder.direct.services.view.action.contest.UpdateContestSubmissionFeedbackAction"
          scope="prototype" parent="baseDirectStrutsAction">
    </bean>

    <bean id="studioSubmissionCheckoutAction"
        class="com.topcoder.direct.services.view.action.contest.ContestSubmissionsCheckoutAction"
        scope="prototype" parent="baseDirectStrutsAction"></bean>

    <bean id="saveMilestoneAction"
        class="com.topcoder.direct.services.view.action.contest.SaveMilestoneAction"
        scope="prototype" parent="baseDirectStrutsAction"></bean>

    <bean id="checkoutFinalAction"
        class="com.topcoder.direct.services.view.action.contest.CheckoutFinalAction"
        scope="prototype" parent="baseDirectStrutsAction"></bean>

    <bean id="getProjectPermissionsAction"
          class="com.topcoder.direct.services.view.action.dashboard.GetProjectPermissionsAction"
          scope="prototype" parent="baseDirectStrutsAction">
    </bean>

    <bean id="searchUserAction"
          class="com.topcoder.direct.services.view.action.dashboard.SearchUserAction"
          scope="prototype" parent="baseDirectStrutsAction">
    </bean>

    <bean id="updateProjectPermissionsAction"
          class="com.topcoder.direct.services.view.action.dashboard.UpdateProjectPermissionsAction"
          scope="prototype" parent="baseDirectStrutsAction">
    </bean>

    <bean id="permissionsUpdateSuccessAction" class="com.topcoder.direct.services.view.action.ForwardAction"
          scope="prototype">
        <property name="actionMessages">
            <list>
                <value>Permissions have been updated successfully</value>
            </list>
        </property>
    </bean>

    <bean id="softwareContestSubmissionsAction"
          class="com.topcoder.direct.services.view.action.contest.SoftwareContestSubmissionsAction"
          scope="prototype" parent="baseDirectStrutsAction">
    </bean>

    <bean id="studioNoWinnerAction"
          class="com.topcoder.direct.services.view.action.contest.StudioNoWinnerAction"
          scope="prototype" parent="baseDirectStrutsAction">
    </bean>

    <bean id="studioAbandonContestAction"
          class="com.topcoder.direct.services.view.action.contest.StudioNoWinnerAction"
          scope="prototype" parent="baseDirectStrutsAction">
        <property name="abandonContest" value="true"/>
    </bean>

    <bean id="updateStudioGeneralFeedbackAction"
          class="com.topcoder.direct.services.view.action.contest.UpdateGeneralSubmissionsFeedbackAction"
          scope="prototype" parent="baseDirectStrutsAction">
    </bean>


     <!-- Since specification review assembly -->
    <bean id="specificationReviewService" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="SpecificationReviewServiceBean/remote"/>
        <property name="cache" value="true"/>
        <property name="lookupOnStartup" value="false"/>
        <property name="jndiEnvironment">
            <props>
                <prop key="java.naming.factory.initial">org.jnp.interfaces.NamingContextFactory
                </prop>
                <prop key="java.naming.provider.url">${service.provder.url}</prop>
                <prop key="java.naming.factory.url.pkgs">org.jboss.naming:org.jnp.interfaces
                </prop>
            </props>
        </property>
        <property name="proxyInterface" value="com.topcoder.service.review.specification.SpecificationReviewService"/>
    </bean>
    
    <bean id="specReviewCommentService"
          class="com.topcoder.direct.specreview.services.impl.MockSpecReviewCommentServiceImpl">
    </bean>
    
    <bean id="specificationReviewAction"
          class="com.topcoder.direct.services.view.action.specreview.SpecificationReviewAction"
          abstract="true">
    </bean>
    
    <bean id="startSpecificationReviewAction"
          class="com.topcoder.direct.services.view.action.specreview.StartSpecificationReviewAction"
          scope="prototype" parent="specificationReviewAction">
        <property name="specificationReviewService" ref="specificationReviewService"/>
        <property name="contestServiceFacade" ref="contestServiceFacade"/>
    </bean>

    <bean id="viewSpecReviewAction"
          class="com.topcoder.direct.services.view.action.specreview.ViewSpecificationReviewAction"
          scope="prototype" parent="specificationReviewAction">
        <property name="specificationReviewService" ref="specificationReviewService"/>
        <property name="specReviewCommentService" ref="specReviewCommentService"/>
    </bean>
    
    <bean id="saveSpecReviewCommentAction"
          class="com.topcoder.direct.services.view.action.specreview.SaveSpecificationReviewCommentAction"
          scope="prototype" parent="specificationReviewAction">
        <property name="specReviewCommentService" ref="specReviewCommentService"/>
    </bean>

    <bean id="resubmitSpecReviewAction"
          class="com.topcoder.direct.services.view.action.specreview.ResubmitSpecificationReviewAction"
          scope="prototype" parent="specificationReviewAction">
        <property name="specificationReviewService" ref="specificationReviewService"/>
    </bean> 
     <bean id="dashboardReportsAction"
          class="com.topcoder.direct.services.view.action.report.DashboardPipelineAction"
          scope="prototype" parent="baseDirectStrutsAction">
        <property name="viewData.showJustForm" value="true"/>
    </bean>

    <bean id="dashboardPipelineAction"
          class="com.topcoder.direct.services.view.action.report.DashboardPipelineAction"
          scope="prototype" parent="baseDirectStrutsAction">
        <property name="viewData.showJustForm" value="false"/>
    </bean>
    
    <bean id="enterpriseDashboardAction"
          class="com.topcoder.direct.services.view.action.dashboard.EnterpriseDashboardAction"
          scope="prototype" parent="baseDirectStrutsAction">
    </bean>    

    <bean id="dashboardPipelineDraftsRatioAction"
          class="com.topcoder.direct.services.view.action.report.DashboardPipelineDraftsRatioAction"
          scope="prototype" parent="baseDirectStrutsAction">
    </bean>
    
        <!-- For Copilot Profile and Copilot Project DAO-->
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
			<value>java:TCS_CATALOG</value>
		</property>
	</bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mappingResources">
            <list>
                <value>/META-INF/mapping.hbm.xml</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <value>
                hibernate.dialect=org.hibernate.dialect.InformixDialect
                hibernate.show_sql=false                
            </value>
        </property>
    </bean>
        
    <tx:annotation-driven transaction-manager="txManager" />
    <bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean name="copilotBaseDAO" abstract="true">
        <property name="loggerName" value="copilotBaseDAO"/>
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <bean name="copilotProfileDAO" class="com.topcoder.direct.services.copilot.dao.impl.CopilotProfileDAOImpl"
          parent="copilotBaseDAO"/>

    <bean name="copilotProjectDAO" class="com.topcoder.direct.services.copilot.dao.impl.CopilotProjectDAOImpl"
          parent="copilotBaseDAO"/>
          
    <bean name="lookupDAO" class="com.topcoder.direct.services.copilot.dao.impl.LookupDAOImpl"
          parent="copilotBaseDAO"/>          

    <bean id="copilotManageAction"
      class="com.topcoder.direct.services.view.action.copilot.CopilotManageAction"
      scope="prototype" parent="baseDirectStrutsAction">
        <property name="copilotProfileDAO" ref="copilotProfileDAO"/>
    </bean>   
    
    <bean id="copilotProjectAction"
      class="com.topcoder.direct.services.view.action.copilot.CopilotProjectAction"
      scope="prototype" parent="baseDirectStrutsAction">
        <property name="copilotProjectDAO" ref="copilotProjectDAO"/>
        <property name="lookupDAO" ref="lookupDAO"/>
    </bean>
    
    <bean id="listCopilotContestsAction"
          class="com.topcoder.direct.services.view.action.copilot.ListCopilotContestsAction"
          scope="prototype" parent="baseDirectStrutsAction">
    </bean>

    <bean id="copilotContestsRegistrantsAction"
          class="com.topcoder.direct.services.view.action.contest.ContestRegistrantsAction"
          scope="prototype" parent="baseDirectStrutsAction">
    </bean>

    <bean id="copilotPostingContestSubmissionsAction"
          class="com.topcoder.direct.services.view.action.contest.SoftwareContestSubmissionsAction"
          scope="prototype" parent="baseDirectStrutsAction">
    </bean>

    <bean id="selectCopilotAction"
          class="com.topcoder.direct.services.view.action.copilot.SelectCopilotAction"
          scope="prototype" parent="baseDirectStrutsAction">
        <property name="copilotProjectDAO" ref="copilotProjectDAO"/>
        <property name="lookupDAO" ref="lookupDAO"/>
    </bean>

    <bean id="allCopilotsListAction"
          class="com.topcoder.direct.services.view.action.copilot.AllCopilotsListAction"
          scope="prototype" parent="baseDirectStrutsAction">
        <property name="copilotProfileDAO" ref="copilotProfileDAO"/>
    </bean>
</beans>
